<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>CTF on rmn0x01</title>
    <link>https://rmn0x01.github.io/categories/ctf/</link>
    <description>Recent content in CTF on rmn0x01</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 02 Nov 2019 00:00:00 +0000</lastBuildDate><atom:link href="https://rmn0x01.github.io/categories/ctf/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Writeup c0rrupt</title>
      <link>https://rmn0x01.github.io/2019/11/02/writeup-pico2019-corrupt/</link>
      <pubDate>Sat, 02 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://rmn0x01.github.io/2019/11/02/writeup-pico2019-corrupt/</guid>
      <description>We found this file. Recover the flag
Intro File yang diberikan berupa
$ file mystery mystery: data TLDR  Perbaiki file-header Perbaiki chunks Get the flag  Full Steps Hint yang diberikan adalah
 Try fixing the file header
 Sehingga langkah pertama yang dilakukan adalah menganalisis hex-value-nya menggunakan hex editor atau hex viewer, disini saya menggunakan Bless Delapan bytes pertama terlihat seperti membentuk file header PNG namun tidak sempurna, sehingga diubah ke file header PNG yang benar</description>
    </item>
    
    <item>
      <title>Writeup VaultDoor Series</title>
      <link>https://rmn0x01.github.io/2019/11/02/writeup-pico2019-vaultdoor-series/</link>
      <pubDate>Sat, 02 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://rmn0x01.github.io/2019/11/02/writeup-pico2019-vaultdoor-series/</guid>
      <description>Rangkaian soal Reversing-VaultDoor picoCTF Setiap challenges terdapat satu file .java yang harus di-reverse untuk didapatkan flag-nya
VaultTraining VaultDoorTraining.java
import java.util.*; class VaultDoorTraining { public static void main(String args[]) { VaultDoorTraining vaultDoor = new VaultDoorTraining(); Scanner scanner = new Scanner(System.in); System.out.print(&amp;#34;Enter vault password: &amp;#34;); String userInput = scanner.next(); String input = userInput.substring(&amp;#34;picoCTF{&amp;#34;.length(),userInput.length()-1); if (vaultDoor.checkPassword(input)) { System.out.println(&amp;#34;Access granted.&amp;#34;); } else { System.out.println(&amp;#34;Access denied!&amp;#34;); } } // The password is below. Is it safe to put the password in the source code?</description>
    </item>
    
    <item>
      <title>Writeup WhitePages</title>
      <link>https://rmn0x01.github.io/2019/11/01/writeup-pico2019-whitepages/</link>
      <pubDate>Fri, 01 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://rmn0x01.github.io/2019/11/01/writeup-pico2019-whitepages/</guid>
      <description>Soal forensik poin 250
Intro File yang diberikan berupa
$ file whitepages.txt whitepages.txt: UTF-8 Unicode text, with very long lines, with no line terminators $ cat whitepages.txt TLDR  Replace Get the flag  Full Steps Sesuai dengan judul, jika dibuka menggunakan cat hanya berisi spasi-spasi seperti layaknya WhitePages. Berbeda ketika dibuka dengan cara
&amp;gt;&amp;gt;&amp;gt; f = open(&amp;#39;whitepages.txt&amp;#39;,&amp;#39;r&amp;#39;).read() &amp;gt;&amp;gt;&amp;gt; f &amp;#39;\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83\xe2\x80\x83&amp;#39; Hasil analisis adalah terdapat dua jenis “spasi” di whitepages.txt, yaitu spasi ‘ ’ dan spasi ‘\xe2\x80\x83’.</description>
    </item>
    
    <item>
      <title>Writeup bASe64 encRyption</title>
      <link>https://rmn0x01.github.io/2019/10/31/writeup-slashroot4-quals-b64/</link>
      <pubDate>Thu, 31 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://rmn0x01.github.io/2019/10/31/writeup-slashroot4-quals-b64/</guid>
      <description>Soal kriptografi penyisihan Slashroot 4.0 dengan poin 150.
Intro File yang diberikan berupa
BASe64.py: Python script, ASCII text executable flag.enc: ASCII text, with no line terminators public.key: ASCII text TLDR  Reverse Get the flag  Full Steps Script yang digunakan untuk enkripsi adalah sebagai berikut:
BASe64.py
from base64 import b64encode as b64 from Crypto.PublicKey import RSA from Crypto.Util.number import bytes_to_long, long_to_bytes FLAG = &amp;#34;SlashRootCTF&amp;#34; def enc(key, msg, b6=&amp;#34;&amp;#34;, b4=&amp;#34;&amp;#34;): key = RSA.</description>
    </item>
    
    <item>
      <title>Writeup Cable News Network</title>
      <link>https://rmn0x01.github.io/2019/10/31/writeup-compfest11-quals-cnn/</link>
      <pubDate>Thu, 31 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://rmn0x01.github.io/2019/10/31/writeup-compfest11-quals-cnn/</guid>
      <description>Salah satu soal penyisihan Compfest 11 gelombang pertama.
Intro File yang diberikan berupa
$ file soal.png soal.png: PNG image data, 700 x 700, 8-bit/color RGBA, non-interlaced  TLDR  Stegsolve Get the flag  Full Steps Biasanya jika diberikan challenge forensic maupun steganografi dengan file PNG, akan dilakukan beberapa perintah-perintah mainstream terlebih dahulu untuk mendapatkan flag-nya, salah satunya adalah Stegsolve
$ stegsolve Flag didapatkan di Colour Inversion (XOR) Flag COMPFEST11{pre_processing_convolutional_neural_network_yeay}</description>
    </item>
    
    <item>
      <title>Writeup Encang Maman Belajar Ngoding</title>
      <link>https://rmn0x01.github.io/2019/10/31/writeup-compfest11-quals-encang/</link>
      <pubDate>Thu, 31 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://rmn0x01.github.io/2019/10/31/writeup-compfest11-quals-encang/</guid>
      <description>Encang Maman belajar ngoding. Dia mengirim pesan untuk kalian. Dapatkah kalian membaca kode dari Encang Maman?
Intro File yang diberikan berupa
$ file pesan.zip pesan.zip: Zip archive data, at least v2.0 to extract $ unzip pesan.zip Archive: pesan.zip inflating: pesan2 inflating: pesan1 $ file * pesan1: data pesan2: data pesan.zip: Zip archive data, at least v2.0 to extract TLDR  Konversi UTF-16 Konversi UTF-32 Get the flag  Full Steps Kedua file (pesan1 dan pesan2) ketika dibaca hanya menampilkan data yang tidak dapat dipahami.</description>
    </item>
    
    <item>
      <title>Writeup ReUse</title>
      <link>https://rmn0x01.github.io/2019/10/31/writeup-slashroot4-quals-reuse/</link>
      <pubDate>Thu, 31 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://rmn0x01.github.io/2019/10/31/writeup-slashroot4-quals-reuse/</guid>
      <description>Soal kategori Kriptografi dengan poin 100, salah satu soal yang muncul pada gelombang pertama penyisihan Slashroot 4.0
Intro File yang diberikan berupa
$ file ReUse.zip ReUse.zip: Zip archive data, at least v1.0 to extract $ unzip ReUse.zip Archive: ReUse.zip extracting: ENV.py.encrypted inflating: file.decrypted.zip inflating: file.zip.encrypted inflating: ReUse.py TLDR  XOR Get the flag  Full Steps Penjelasan dari keempat file yang diberikan adalah:
 ENV.py.encrypted : File ENV.py yang terenkripsi file.</description>
    </item>
    
    <item>
      <title>Writeup Stegano2</title>
      <link>https://rmn0x01.github.io/2019/10/31/writeup-indoxploit-steg2/</link>
      <pubDate>Thu, 31 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://rmn0x01.github.io/2019/10/31/writeup-indoxploit-steg2/</guid>
      <description>Stegano 2 Indoxploit
Intro File yang diberikan berupa
$ file who-is-this.zip who-is-this.zip: Zip archive data, at least v?[0x314] to extract $ unzip who-is-this.zip Archive: who-is-this.zip creating: who-is-this/ inflating: who-is-this/lol.jpg inflating: who-is-this/readme-first  TLDR  Steghide Susun script solver-nya Get the flag  Full Steps Baca pesan di readme-first terlebih dahulu
# can u read this bruh ?? aGVsbC1vIG04LCBpIGFtICJoaWRpbmciIGluc2lkZSB0aGUgcGljdHogLi4= aWYgdSB3YW50IHRvIGxvb2sgYXQgbWUsIHBseiB1c2UgYSB0ZXh0IGluc2lkZSBhICJyZWQgbGluZSIgYXMgYSBrZXkgLi4= R0xIRiAhISBpdCBjb3VsZCBiZSBFWiA0IFUgLi4= Decode Base-64, menjadi
hell-o m8, i am &amp;quot;hiding&amp;quot; inside the pictz .</description>
    </item>
    
    <item>
      <title>Writeup Digging Deeper</title>
      <link>https://rmn0x01.github.io/2019/10/30/writeup-gemastik12-final-dig/</link>
      <pubDate>Wed, 30 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://rmn0x01.github.io/2019/10/30/writeup-gemastik12-final-dig/</guid>
      <description>Satu-satunya soal steganografi di final Gemastik XII, poin 200.
Intro File yang diberikan berupa
$ file minatozaki.bmp minatozaki.bmp: bzip2 compressed data, block size = 600k TLDR  Extract Extract Brute force password to extract Extract Baca Spectogram Get the flag  Full Steps Meskipun file berekstensi bmp, ketika dicek dengan file menandakan bahwa file tersebut adalah bzip compressed data sehingga dilakukan ekstraksi data
$ 7z e minatozaki.bmp 7-Zip [64] 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21 p7zip Version 16.</description>
    </item>
    
    <item>
      <title>Writeup Disk Forensic</title>
      <link>https://rmn0x01.github.io/2019/10/30/writeup-gemastik12-final-disk/</link>
      <pubDate>Wed, 30 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://rmn0x01.github.io/2019/10/30/writeup-gemastik12-final-disk/</guid>
      <description>Soal forensik pembuka final Gemastik XII di Telkom University. Poin 200
Intro File yang diberikan berupa
$ file forensic.img forensic.img: data TLDR  Perbaiki file Mount file Get the flag  Full Steps File forensic.img perlu diperbaiki terlebih dahulu agar dapat dilakukan mounting dengan menggunakan fsck
$ fsck.ext2 forensic.img e2fsck 1.44.5 (15-Dec-2018) ext2fs_open2: Bad magic number in super-block fsck.ext2: Superblock invalid, trying backup blocks... forensic.img was not cleanly unmounted, check forced.</description>
    </item>
    
    <item>
      <title>Writeup FTP Forensik</title>
      <link>https://rmn0x01.github.io/2019/10/30/writeup-gemastik12-final-ftp/</link>
      <pubDate>Wed, 30 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://rmn0x01.github.io/2019/10/30/writeup-gemastik12-final-ftp/</guid>
      <description>Soal forensik final Gemastik XII di Telkom University. Poin 200
Intro File yang diberikan berupa
$ file * images.png: PNG image data, 358 x 141, 8-bit colormap, non-interlaced trafik-gemastik12.pcapng: pcap-ng capture file - version 1.0 images.png yang diterima menerangkan bagaimana File Transfer Protocol (FTP) bekerja TLDR  FTP Packet filter Analisis paket Dump JPG File Recover file Dapatkan password ZIP Get the flag  Full Steps Sesuai dengan judul soal dan images.</description>
    </item>
    
    <item>
      <title>Writeup Jendela Dunia</title>
      <link>https://rmn0x01.github.io/2019/10/30/writeup-hology-final-jendeladunia/</link>
      <pubDate>Wed, 30 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://rmn0x01.github.io/2019/10/30/writeup-hology-final-jendeladunia/</guid>
      <description>Soal Forensik pertama yang diberikan saat final Hology 2.0, starting points: 100.
Intro File yang diberikan berupa
$ file Leaked Leaked: data TLDR  Perbaiki file Import registry Analisis registry Extract hex value Decode Get the flag  Full Steps Isi dari file Leaked adalah
$ cat Leaked aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa��Windows Registry Editor Version 5.00 (...) [HKEY_CURRENT_USER\Software\Microsoft\XboxLive] (...) AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAaa Yang pertama dilakukan adalah menghapus string sampah aaaaaa… di awal file dan AAAAA… di akhir file</description>
    </item>
    
    <item>
      <title>Writeup I(Co)MP</title>
      <link>https://rmn0x01.github.io/2019/10/29/writeup-hology-final-icmp/</link>
      <pubDate>Tue, 29 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://rmn0x01.github.io/2019/10/29/writeup-hology-final-icmp/</guid>
      <description>Soal Forensik terakhir yang diberikan saat final Hology 2.0 sekitar satu jam sebelum lomba selesai.
Intro File yang diberikan berupa
$ file icomp.iso icomp.iso: ISO 9660 CD-ROM filesystem data &amp;#39;CDROM&amp;#39; TLDR  Mount file icomp.iso Analisis file _not_imp/capture.pca Dapatkan potongan string Caesar cipher, kemudian gabungkan Get the flag  Full Steps File merupakan filesystem yang tidak corrupt sehingga dapat langsung dilakukan mount
$ mkdir mont $ mount -o loop icomp.iso mont/ mount: /root/ctf/games/hology/final/foren/ico/mont: WARNING: device write-protected, mounted read-only.</description>
    </item>
    
  </channel>
</rss>
